Primeiros testes
5 trials e 4 épocas:
1) LSTM Puro: 0.00039736265898682177
2) LSTM + dropout: 0.013068703934550285
3) LSTM + LSTM: 0.0004917564801871777
4) LSTM + dropout + LSTM + dropout: 0.001145733636803925




Roadmap:
- Comentar os códigos inteiros.
- Experimentos Llama.
- Valiar a feature importance para o LSTM e verificar se consigo saber quais as variáveis mais importantes.
- Avaliar o que muda se embaralhar a ordem das trips na entrada do treinamento.
- Thommas:
    - Pegar o dataset de combustão como Daniel
    - Usar a ideia do Thommas para treinar os modelos em cima do novo dataset (combustão) e no dataset de agora (elétrico).
    - Aplicar o EsquemaProjeto.jpeg com as features estimadas do elétrico pelo nosso modelo e verificar o erro da CO2 emissions.




Experimento Llama:
- Trials:
	- 100 trials
- Epochs:
	- 10000 com early stopping
- Arquiteturas:
	- São 3 estudos só: 
		- 1 a 3 camadas de LSTM todas com dropout
	- Adicionar um quarto estudo de LayerNorm
		- LSTM - Norm - LSTM - Norm - LSTM - Norm - Dense - Norm - Dense(saída)
		- model.add(LSTM(units, return_sequences=True, input_shape=(seq_len, input_dim)))	# Esquece o input shape aqui pq eu vou adicionar uma camada de entrada com ele.
		- model.add(LayerNormalization())	# Precisa do return_sequences no LSTM para fazer a normalização
		- model.add(tf.keras.layers.Lambda(lambda x: x[:, -1, :]))	# Sempre que usa o return_sequences no LSTM, precisa colocar essa lambda para pegar somente a última e não a janela toda
		- model.add(Dense(units))	# Não retorna sequencias pq não é recorrente
		- model.add(LayerNormalization())	# Não precisa do lambda após pq a entrada não foi uma sequência
		- model.add(Dense(1))	# Camada de saída
- Parâmetros e Intervalos:
	- Dense: Ativação relu ou tanh
	- LSTM não muda a ativação
	- LSTM units: 16 a 64 com step de 16
	- Dense units: 16 a 64 com step de 16
	- Dropout recurrent: categorico 0, .25 e .5 
	- Optimizer: Adam com learning_rate categorico: 0.1, 0.01, 0.001
	- Batch_size: 32, 64, 128 e 256




optuna-dashboard sqlite:///lstm.sqlite3 --port 8880      
Acessar em http://localhost:8880/
